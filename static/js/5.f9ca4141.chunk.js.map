{"version":3,"sources":["utils/index.ts","styles/Input.styles.tsx","service/index.ts","assets/images/logo.svg","styles/Alert.styles.tsx","service/types.ts","service/api-frontend.ts","components/Header/Header.styles.ts","components/Header/Header.tsx","App/App.actions.ts","layouts/MainLayout.styles.tsx","layouts/MainLayout.tsx","pages/Todo/Todo.styles.ts","pages/Todo/components/Toolbar.js","pages/Todo/components/CreateTodo.js","pages/Todo/Todo.actions.ts","pages/Todo/Todo.thunks.ts","assets/images/empty-list.svg","pages/Todo/components/TodoItem.js","pages/Todo/index.tsx"],"names":["colors","isTodoCompleted","todo","status","TodoStatus","COMPLETED","generateColor","Math","floor","random","length","InputContainer","styled","div","InputLabel","label","props","theme","gray","fontSize","small","fontWeight","semi","LabelRequired","span","red","Input","input","normal","primary","dark","main","InputEndAdornment","blue","Service","require","default","Alert","palette","error","IAPI","ApiFrontend","username","password","a","loginTime","Date","getTime","Promise","resolve","token","reject","code","message","content","newTodo","created_date","toISOString","ACTIVE","id","shortid","user_id","color","todoList","localStorage","getItem","JSON","parse","field","value","index","findIndex","setItem","stringify","splice","map","v","LogoutIcon","HeaderContainer","header","mapDispatchToProps","logout","type","types","connector","connect","state","history","useHistory","useEffect","onClick","push","PATH","LOGIN","className","MainLayoutContainer","MainLayout","children","TodoContainer","TodoContent","TodoLogo","TodoWrapper","TaskContainer","Container","Left","Center","Right","ToolbarItem","ActiveItem","white","Item","Toolbar","isActiveView","onToggleAllTodo","onClickTab","listStatus","onDeleteAllTodo","useState","active","setActive","style","title","i","timeout","CreateTodo","inputRef","useRef","handleCreate","onKeyDownAction","e","key","current","clearTimeout","cb","setTimeout","ref","placeholder","onKeyDown","setTodoList","payload","getTodoList","dispatch","then","res","actions","catch","err","TodoThunk","createTodo","unshift","updateTodo","todoId","checked","updateAllTodo","deleteAllTodo","deleteTodo","TodoList","onClickDeleteTodo","onUpdateTodoStatus","onUpdateTodoContent","edit","setEdit","handleClickOutside","contains","target","document","removeEventListener","newValue","onDoubleClick","addEventListener","TodoThunks","showing","setShowing","setError","todoListAvailable","filter","reduce","accum","updateTodoList","resp","isCompleted","statusValue","src","logoImg","width","height","alt","emptyListImg"],"mappings":"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","file":"static/js/5.f9ca4141.chunk.js","sourcesContent":["import { Todo, TodoStatus } from 'models/todo';\n\nconst colors = [\"gray\", \"red\", \"pink\", \"grape\", \"violet\",\n  \"indigo\", \"blue\", \"cyan\", \"teal\", \"green\", \"lime\", \"yellow\", \"orange\"];\n\nexport function isTodoCompleted(todo: Todo): boolean {\n  return todo.status === TodoStatus.COMPLETED;\n}\n\nexport function isTodoActive(todo: Todo): boolean {\n  return todo.status === TodoStatus.ACTIVE;\n}\n\nexport function generateColor() {\n  return colors[Math.floor(Math.random() * colors.length)];\n}","import styled from \"styled-components\";\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const InputLabel = styled.label`\n  color: ${(props) => props.theme.colors.gray[7]};\n  font-size: ${(props) => props.theme.fontSize.small};\n  font-weight: ${(props) => props.theme.fontWeight.semi};\n  padding-left: 8px;\n  text-align: left;\n`;\nexport const LabelRequired = styled.span`\n  color: ${(props) => props.theme.colors.red[8]};\n`;\nexport const Input = styled.input`\n  background: white;\n  border-radius: 8px;\n  border: ${(props) => props.theme.colors.gray[2]} 1px solid;\n  transition: all 200ms ease-in-out;\n  min-height: 36px;\n  outline: none;\n  padding: 0 8px;\n  font-size: ${(props) => props.theme.fontSize.normal};\n  color: ${(props) => props.theme.colors.primary.dark[3]};\n  margin: 4px 0;\n  width: 100%;\n  &:hover {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n`;\n\nexport const InputEndAdornment = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 30%;\n  color: ${(props) => props.theme.colors.blue[3]};\n  cursor: pointer;\n`;\n","import {IAPI} from './types';\n\nlet Service : IAPI;\nif (process.env.REACT_APP_WHOAMI === 'frontend') {\n    Service = require('./api-frontend').default as IAPI\n} else {\n    Service = require('./api-fullstack').default as IAPI\n}\n\nexport default Service","export default __webpack_public_path__ + \"static/media/logo.05536d55.svg\";","import styled from \"styled-components\";\n\nexport const Alert = styled.div`\n  background: ${(props) => props.theme.palette.error.main};\n  color: ${(props) => props.theme.palette.error.dark};\n  padding: 6px 16px;\n  display: flex;\n  font-weight: 400;\n  border-radius: 4px;\n  align-items: center;\n`;","import {Todo} from 'models/todo';\nexport abstract class IAPI {\n    abstract signIn(username: string, password: string) : Promise<Object>\n    abstract getTodoList() : Promise<Array<Todo>>\n    abstract createTodo(content: string) : Promise<Todo>\n    abstract updateTodo(field: any,value : any, id: string) : Promise<Todo>\n    abstract deleteTodo(id: string) : Promise<Array<Todo>>\n    abstract deleteAllTodo() : Promise<String>\n    abstract updateAllTodo(status: boolean) : Promise<String>\n}","import { IAPI } from \"./types\";\nimport shortid from \"shortid\";\n\nimport { Todo, TodoStatus } from \"models/todo\";\nimport { generateColor } from 'utils';\n\nconst mockToken = \"testabc.xyz.ahk\";\nclass ApiFrontend extends IAPI {\n  async signIn(username: string, password: string): Promise<Object> {\n    if (username === \"firstUser\" && password === \"example\") {\n      const loginTime = new Date().getTime();\n      return Promise.resolve({\n        token: mockToken,\n        username: \"firstUser\",\n        loginTime: loginTime,\n      });\n    }\n    return Promise.reject({ code: 400, message: 'The username or password is incorrect. Please try again.' });\n  }\n  /*\n    fake data api - save data to local storage\n    add some new api : update, delete all\n   */\n  async createTodo(content: string): Promise<Todo> {\n    try {\n      const newTodo = {\n        content: content,\n        created_date: new Date().toISOString(),\n        status: TodoStatus.ACTIVE,\n        id: shortid(),\n        user_id: \"firstUser\",\n        color: generateColor()\n      };\n      return Promise.resolve(newTodo as Todo);\n    } catch (error) {\n      return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n\n  async getTodoList(): Promise<Todo[]> {\n    try {\n       let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async updateTodo(field: any, value: any, id: string): Promise<Todo> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      todoList[index][field] = value;\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList[index] as Todo);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async deleteTodo(id: string): Promise<Todo[]> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      if (index > -1) {\n        todoList.splice(index, 1);\n      }\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n \n  async deleteAllTodo(): Promise<String> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = [];\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Delete Success\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n    \n  }\n  async updateAllTodo(status: Boolean): Promise<String> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      todoList = todoList.map((v: Todo) => {\n          v.status = status ? TodoStatus.COMPLETED : TodoStatus.ACTIVE;\n          return v;\n      })\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Updated\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n}\n\nexport default new ApiFrontend();\n","import styled from \"styled-components\"\n\nexport const LogoutIcon = styled.span`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    background: ${(props) => props.theme.colors.gray[1]};\n    color: ${(props) => props.theme.colors.gray[6]};\n    padding: 0.5rem 1rem;\n    border-radius: 8px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n    :hover {\n        color: ${(props) => props.theme.colors.gray[7]};\n    }\n`\n\nexport const HeaderContainer = styled.header`\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n`","import { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { logout } from \"App/App.actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { LogoutIcon, HeaderContainer } from \"./Header.styles\";\nimport { PATH } from \"constants/paths\";\nimport { IoPowerOutline } from \"react-icons/io5\";\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  logout,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {}\n\nconst Header = (props: Props) => {\n  const { logout } = props;\n  const history = useHistory();\n  const handleLogout = () => {\n    logout();\n    history.push(PATH.LOGIN);\n  };\n  useEffect(() => {}, [history]);\n\n  return (\n    <HeaderContainer>\n      <LogoutIcon onClick={handleLogout} className=\"cursor-pointer\">\n        <IoPowerOutline />\n        <span className=\"pl-8\">Logout</span>\n      </LogoutIcon>\n    </HeaderContainer>\n  );\n};\n\nexport default connector(Header);\n","import * as types from \"./App.constants\"\n\nexport const logout = () => ({\n  type: types.LOGOUT\n})\n","import styled from \"styled-components\";\n\nexport const MainLayoutContainer = styled.div`\n  background: white;\n  width: 80rem;\n  height: 100vh;\n  padding: 16px;\n`;\nexport const MainLayoutWrapper = styled.div`\n  background: white;\n  width: 80rem;\n  height: 100vh;\n  padding: 16px;\n`;\n","import React, { ReactNode } from \"react\";\nimport Header from \"components/Header/Header\";\nimport { MainLayoutContainer } from \"./MainLayout.styles\";\ninterface Props {\n  children: ReactNode;\n}\n\nexport default function MainLayout(props: Props) {\n  const { children } = props;\n  return (\n    <MainLayoutContainer>\n      <main>\n        <Header />\n        <div>{children}</div>\n      </main>\n    </MainLayoutContainer>\n  );\n}\n","import styled from \"styled-components\"\n\nexport const TodoContainer = styled.div`\n  position: relative;\n  /* border: 1px solid rgba(0,0,0, 0.13); */\n  border-radius: 8px;\n  width: 500px;\n  padding: 24px;\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n  margin: 5rem auto auto;\n`\nexport const TodoContent = styled.div`\n  margin: 1rem auto auto;\n  padding: 4px 8px;\n`\n\nexport const TodoLogo = styled.div`\n  position: absolute;\n  top: -2rem;\n  left: 30%;\n  background: white;\n  padding: 0 1rem;\n`\n\nexport const TodoWrapper = styled.div`\n  margin-top: 1rem;\n  padding: 0 8px;\n`\nexport const TaskContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 2px;\n  margin: 8px 0;\n  border-left: 4px solid ${(props) => props.theme.colors[props.color || 'blue'][5]};\n  color: ${(props) => props.theme.colors[props.color || 'blue'][5]};\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n \n  \n`\n\nexport const TaskItemContainer = styled.div`\n  /* flex-grow: 1;\n  height: 100px;\n  align-items: center;\n  display: flex; */\n`\n\n// Toolbar\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n`\nexport const Left = styled.div`\n  flex-grow: 0;\n  display: flex;\n  align-items: center;\n`\n\nexport const Center = styled.div`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`\nexport const Right = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const ToolbarItem = styled.div`\n  padding: 4px 8px;\n  cursor: pointer;\n`\n\nexport const ActiveItem = styled.div`\n  background: ${(props) => props.theme.palette.primary.main};\n  color: ${(props) => props.theme.colors.white};\n  border-radius: 8px;\n  padding: 4px 8px\n`\n\nexport const Item = styled.div`\n  border-radius: 8px;\n  padding: 4px 8px;\n`","import { useState } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdDelete } from \"react-icons/md\";\nimport { ToolbarItem, Container, Center, Left, Right, ActiveItem, Item } from '../Todo.styles';\nexport default function Toolbar(props) {\n  const {\n    isActiveView = false,\n    onToggleAllTodo = () => { },\n    onClickTab = () => { },\n    listStatus = [],\n    onDeleteAllTodo = () => { }\n  } = props;\n  const [active, setActive] = useState(listStatus[0].value);\n  return (\n    <Container>\n      <Left\n        style={{}}\n        className=\"cursor-pointer\"\n        onClick={() => {\n          onToggleAllTodo(!isActiveView);\n        }}\n        title='Mark all done'\n      >\n        {isActiveView ? (\n          <ImCheckboxChecked color='green' />\n        ) : (\n          <ImCheckboxUnchecked color='green' />\n        )}\n      </Left>\n      <Center className='flex-center'>\n        {listStatus &&\n          listStatus.length &&\n          listStatus.map((v, i) => {\n            return (\n              <ToolbarItem\n                key={i}\n                onClick={() => {\n                  setActive(v.value)\n                  onClickTab(v.value)\n                }}\n              >\n                {active === v.value ? <ActiveItem>{v.label}</ActiveItem> : <Item>\n                  {v.label}\n                </Item>}\n              </ToolbarItem>\n            );\n          })}\n      </Center>\n\n      <Right\n        className=\"cursor-pointer\"\n        onClick={onDeleteAllTodo}\n        title='Clear all todo list'\n      >\n        <MdDelete color='red' />\n      </Right>\n    </Container>\n  );\n}\n","import { useRef } from \"react\";\n\nimport { CgEnter } from \"react-icons/cg\";\nimport { Input, InputContainer, InputEndAdornment } from \"styles/Input.styles\";\n\nlet timeout = null;\n\nexport default function CreateTodo(props) {\n  const inputRef = useRef(null);\n  const { handleCreate = () => { } } = props;\n  const onKeyDownAction = (e) => {\n    if (e.key === \"Enter\" && inputRef.current) {\n      const value = inputRef.current.value;\n      if (timeout) {\n        clearTimeout(timeout); // NOTE: optimize when user typing\n      }\n      const cb = () => {\n        inputRef.current.value = \"\";\n      };\n      timeout = setTimeout(() => {\n        handleCreate(value, cb);\n      }, 200);\n    }\n  };\n\n  return (\n    <InputContainer>\n      <Input\n        ref={inputRef}\n        placeholder='What need to be done?'\n        onKeyDown={onKeyDownAction}\n      />\n      <InputEndAdornment title=\"Click to add\">\n        <div onClick={() => {\n          onKeyDownAction({ key: \"Enter\" });\n        }}><CgEnter /></div>\n      </InputEndAdornment>\n    </InputContainer>\n  );\n}\n","import * as types from \"./Todo.constants\"\nimport {Todo} from \"models/todo\";\n\nexport function getTodoList() {\n  return {\n    type: types.GET_TODO_LIST,\n  }\n}\n\nexport interface SetTodoAction {\n  type: typeof types.SET_TODO_LIST,\n  payload: Array<Todo>\n}\nexport function setTodoList(todoList: Array<Todo>): SetTodoAction {\n  return {\n    type: types.SET_TODO_LIST,\n    payload: todoList\n  }\n}\n\nexport interface CreateTodoAction {\n  type: typeof types.CREATE_TODO,\n  payload: Todo\n}\n\n\nexport function createTodo(newTodo: Todo): CreateTodoAction {\n  return {\n    type: types.CREATE_TODO,\n    payload: newTodo\n  } \n}\n\nexport interface UpdateTodoAction {\n  type: typeof types.UPDATE_TODO,\n  payload: {\n    field: string,\n    value: any,\n    id: string\n  }\n}\n\nexport function updateTodo(field: string, value: any, id: string): UpdateTodoAction {\n  return {\n    type: types.UPDATE_TODO,\n    payload: {\n      field,\n      value,\n      id\n    }\n  }\n}\n\nexport interface UpdateAllTodoAction {\n  type: typeof types.TOGGLE_ALL_TODO_LIST,\n  payload: {\n    status: string\n  }\n}\n\nexport function updateAllTodo(status: string): UpdateAllTodoAction {\n  return {\n    type: types.TOGGLE_ALL_TODO_LIST,\n    payload: {\n      status\n    }\n  }\n}\n\nexport interface UpdateTodoStatusAction {\n  type: typeof types.UPDATE_TODO_STATUS,\n  payload: {\n    todoId: string,\n    checked: boolean\n  }\n}\n\nexport function updateTodoStatus(todoId: string, checked: boolean): UpdateTodoStatusAction {\n  return {\n    type: types.UPDATE_TODO_STATUS,\n    payload: {\n      todoId,\n      checked\n    }\n  }\n}\n\nexport interface UpdateTodoContentAction {\n  type: typeof types.UPDATE_TODO_STATUS_CONTENT,\n  payload: {\n    content: string, todoId: string\n  }\n}\n\nexport function updateTodoContent(content: string, todoId: string): UpdateTodoContentAction {\n  return {\n    type: types.UPDATE_TODO_STATUS_CONTENT,\n    payload: {\n      content,\n      todoId\n    }\n  }\n}\n\n//////////////\nexport interface DeleteTodoAction {\n  type: typeof types.DELETE_TODO,\n  payload: string\n}\n\nexport function deleteTodo(todoId: string): DeleteTodoAction {\n  return {\n    type: types.DELETE_TODO,\n    payload: todoId\n  }\n}\n\n//////////////\nexport interface DeleteAllTodoListAction {\n  type: typeof types.DELETE_ALL_TODO_LIST,\n}\n\nexport function deleteAllTodoList(): DeleteAllTodoListAction {\n  return {\n    type: types.DELETE_ALL_TODO_LIST,\n  }\n}\n\n///////////\nexport interface ToggleAllTodoAction {\n  type: typeof types.TOGGLE_ALL_TODO_LIST,\n  payload: boolean\n}\n\nexport function toggleAllTodo(checked: boolean): ToggleAllTodoAction {\n  return {\n    type: types.TOGGLE_ALL_TODO_LIST,\n    payload: checked\n  }\n}","import Service from \"service\"\nimport * as actions from \"./Todo.actions\";\nimport { TodoStatus } from 'models/todo';\n\nexport const getTodoList = () => dispatch => {\n  dispatch(actions.getTodoList())\n  return Service.getTodoList()\n    .then((res: any) => {\n      return dispatch(actions.setTodoList(res || []));\n    })\n  .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const createTodo = (payload) => dispatch => {\n  dispatch(actions.createTodo(payload))\n  return Service.createTodo(payload)\n    .then((res: any) => {\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\"; \n      todoList = JSON.parse(todoList);\n      todoList.unshift(res);\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return dispatch(getTodoList());\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const updateTodo = (payload) => dispatch => {\n  const { field, value, id } = payload;\n  dispatch(actions.updateTodo(field, value, id))\n  return Service.updateTodo(field, value, id)\n    .then((res: any) => {\n      switch (field) {\n        case \"content\":\n        dispatch(actions.updateTodoContent(id, value))\n            break;\n        case \"status\":\n            dispatch(actions.updateTodoStatus(id, value === TodoStatus.COMPLETED))\n            break;\n        default:\n          break;\n      }\n      return dispatch(getTodoList());\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const updateAllTodo = (status: any) => dispatch => {\n  dispatch(actions.updateAllTodo(status))\n  return Service.updateAllTodo(status)\n    .then((res: any) => {\n      return dispatch(actions.toggleAllTodo(status));\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\nexport const deleteAllTodo = () => dispatch => {\n  dispatch(actions.deleteAllTodoList())\n  return Service.deleteAllTodo()\n    .then((res: any) => {\n      return dispatch(actions.setTodoList([]));\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const deleteTodo = (id: string) => dispatch => {\n  dispatch(actions.deleteTodo(id))\n  return Service.deleteTodo(id)\n    .then((res: any) => {\n      return dispatch(actions.setTodoList(res || []));\n    })\n    .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nconst TodoThunk = {\n  createTodo,\n  getTodoList,\n  updateTodo,\n  updateAllTodo,\n  deleteAllTodo,\n  deleteTodo\n}\n\nexport default TodoThunk;","export default __webpack_public_path__ + \"static/media/empty-list.c98e7c84.svg\";","import { useEffect, useRef, useState } from \"react\";\n\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdDelete } from \"react-icons/md\";\n\nimport { isTodoCompleted } from \"utils\";\nimport { TaskContainer, Center, Left, Right } from '../Todo.styles';\nimport { Input } from \"styles/Input.styles\";\n\nexport default function TodoList({ ...props }) {\n  const {\n    onClickDeleteTodo = () => { },\n    onUpdateTodoStatus = () => { },\n    onUpdateTodoContent = () => { },\n    todo = {\n      content: \"\",\n    },\n  } = props;\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const [edit, setEdit] = useState(false);\n  const handleClickOutside = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setEdit(false);\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = todo.content;\n      }\n      try {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      } catch (error) { }\n    }\n  };\n\n  const handleEnterKeyboard = (e) => {\n    if (e.key === \"Enter\") {\n      const newValue =\n        (inputRef && inputRef.current && inputRef.current.value) || \"\";\n      onUpdateTodoContent(newValue, todo.id, setEdit(false));\n      try {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      } catch (error) { }\n    }\n  };\n  useEffect(() => {\n    if (edit && inputRef && inputRef.current) {\n      inputRef.current.value = todo.content;\n    }\n    return document.removeEventListener(\"mousedown\", handleClickOutside);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [edit]);\n  return (\n    <TaskContainer\n      ref={ref}\n      color={todo.color}\n    >\n      <Left>\n        <div\n          onClick={() => onUpdateTodoStatus(!isTodoCompleted(todo), todo.id)}\n        >\n          <span className='flex-box cursor-pointer'>\n            {isTodoCompleted(todo) ? <ImCheckboxChecked /> : <ImCheckboxUnchecked />}\n          </span>\n        </div>\n      </Left>\n      {!edit ? (\n        <Center className='justify-left ph-8' title=\"Doubleclick to edit content\"\n          onDoubleClick={() => {\n            if (!edit) {\n              setEdit(true);\n              document.addEventListener(\"mousedown\", handleClickOutside);\n            }\n          }}\n        >\n          <span className={isTodoCompleted(todo) ? 'text-line-through' : ''}>{todo.content}</span>\n        </Center>\n      ) : (\n        <Center className='justify-left ph-8'>\n          <Input\n            ref={inputRef}\n            onKeyDown={handleEnterKeyboard}\n            className=\"ma-text ma-input-edit ma-input-edit-todo\"\n          />\n        </Center>\n      )}\n      <Right className='cursor-pointer' onClick={() => onClickDeleteTodo(todo.id)}>\n        <MdDelete />\n      </Right>\n    </TaskContainer>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport MainLayout from \"layouts/MainLayout\";\nimport { TodoStatus } from \"models/todo\";\nimport { isTodoCompleted } from \"utils\";\nimport Toolbar from \"./components/Toolbar\";\nimport CreateTodo from \"./components/CreateTodo\";\nimport TodoThunks from \"./Todo.thunks\";\nimport {\n  TodoContainer,\n  TodoLogo,\n  TodoWrapper,\n  TodoContent,\n} from \"./Todo.styles\";\nimport logoImg from \"assets/images/logo.svg\";\nimport emptyListImg from \"assets/images/empty-list.svg\";\nimport { Alert } from \"styles/Alert.styles\";\nimport { FiAlertOctagon } from \"react-icons/fi\";\nimport TodoItems from \"./components/TodoItem\";\n\ntype EnhanceTodoStatus = TodoStatus | \"ALL\";\n\nconst mapStateToProps = (state) => {\n  return {\n    todoList: state.todo.todoList,\n  };\n};\n\nconst mapDispatchToProps = {\n  getTodoList: TodoThunks.getTodoList,\n  createTodo: TodoThunks.createTodo,\n  updateTodo: TodoThunks.updateTodo,\n  updateAllTodo: TodoThunks.updateAllTodo,\n  deleteAllTodo: TodoThunks.deleteAllTodo,\n  deleteTodo: TodoThunks.deleteTodo,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {}\nconst TodoPage = (props: Props) => {\n  const {\n    getTodoList,\n    createTodo,\n    updateTodo,\n    updateAllTodo,\n    deleteAllTodo,\n    todoList,\n    deleteTodo,\n  } = props;\n  const [showing, setShowing] = useState<EnhanceTodoStatus>(\"ALL\");\n  const [error, setError] = useState<String>(\"\");\n\n  const todoListAvailable = todoList.filter((todo) => {\n    switch (showing) {\n      case TodoStatus.ACTIVE:\n        return todo.status === TodoStatus.ACTIVE;\n      case TodoStatus.COMPLETED:\n        return todo.status === TodoStatus.COMPLETED;\n      default:\n        return true;\n    }\n  });\n  const isActiveView = todoList.reduce(function (accum, todo) {\n    return isTodoCompleted(todo) ? accum : accum + 1;\n  }, 0);\n\n  useEffect(() => {\n    getTodoList();\n  }, [getTodoList]);\n\n  const handleCreate = (value: string, cb: Function) => {\n    if (!value) {\n      setError(\"Please enter todo content\");\n      return;\n    }\n    createTodo(value)\n      .then((resp) => {\n        cb && cb();\n      })\n      .catch((error) => {\n        setError(error?.message);\n      });\n  };\n\n  const updateTodoList = (id: string, field: string, value: string) => {\n    updateTodo({\n      id,\n      field,\n      value,\n    })\n      .then((resp) => {})\n      .catch((error) => {\n        setError(error?.message);\n      });\n  };\n\n  const onUpdateTodoStatus = (isCompleted: boolean, todoId: string) => {\n    const statusValue = isCompleted ? TodoStatus.COMPLETED : TodoStatus.ACTIVE;\n    updateTodoList(todoId, \"status\", statusValue);\n  };\n  const onUpdateTodoContent = (content: string, todoId: string, cb: any) => {\n    if (!content) {\n      setError(\"Content can't empty\");\n      return;\n    }\n    updateTodoList(todoId, \"content\", content);\n  };\n  const onToggleAllTodo = (e: boolean) => {\n    updateAllTodo(e);\n  };\n  const onDeleteAllTodo = () => {\n    if (\n      !todoListAvailable ||\n      (todoListAvailable && !todoListAvailable.length)\n    ) {\n      return;\n    }\n    deleteAllTodo();\n  };\n\n  const onClickDeleteTodo = (id: string) => {\n    deleteTodo(id);\n  };\n\n  return (\n    <MainLayout>\n      <TodoContainer>\n        <TodoLogo>\n          <img src={logoImg} width=\"150px\" height=\"50px\" alt=\"logo\" />\n        </TodoLogo>\n        {error && (\n          <Alert className=\"mt-8\">\n            <FiAlertOctagon fontSize=\"24px\" />\n            <span className=\"pl-8\">{error}</span>\n          </Alert>\n        )}\n        <TodoWrapper>\n          <CreateTodo handleCreate={handleCreate} />\n          <TodoContent>\n            {todoList && todoList.length ? (\n              <Toolbar\n                isActiveView={isActiveView === 0}\n                onToggleAllTodo={onToggleAllTodo}\n                onClickTab={setShowing}\n                listStatus={[\n                  {\n                    value: \"ALL\",\n                    label: \"All\",\n                  },\n                  {\n                    value: TodoStatus.ACTIVE,\n                    label: \"Active\",\n                  },\n                  {\n                    value: TodoStatus.COMPLETED,\n                    label: \"Completed\",\n                  },\n                ]}\n                onDeleteAllTodo={onDeleteAllTodo}\n              />\n            ) : null}\n            <div className=\"scroll-bar\">\n              {todoListAvailable.length ? (\n                <>\n                  {todoListAvailable.map((todo, index) => {\n                    return (\n                      <TodoItems\n                        key={index}\n                        onClickDeleteTodo={onClickDeleteTodo}\n                        onUpdateTodoStatus={onUpdateTodoStatus}\n                        onUpdateTodoContent={onUpdateTodoContent}\n                        todo={todo}\n                      />\n                    );\n                  })}\n                </>\n              ) : (\n                <div className=\"text-center pt-8\">\n                  <img\n                    src={emptyListImg}\n                    width=\"300px\"\n                    height=\"300px\"\n                    alt=\"empty-task\"\n                  />\n                  <br />\n                  <h5>No Tasks</h5>\n                </div>\n              )}\n            </div>\n          </TodoContent>\n        </TodoWrapper>\n      </TodoContainer>\n    </MainLayout>\n  );\n};\n\nexport default connector(TodoPage);\n"],"sourceRoot":""}