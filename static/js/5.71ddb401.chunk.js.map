{"version":3,"sources":["components/Header/Header.styles.ts","components/Header/Header.tsx","App/App.actions.ts","layouts/MainLayout.styles.tsx","layouts/MainLayout.tsx","pages/Todo/Todo.styles.ts","pages/Todo/components/Toolbar.js","pages/Todo/components/CreateTodo.js","pages/Todo/Todo.actions.ts","pages/Todo/Todo.thunks.ts","assets/images/empty-list.svg","pages/Todo/components/TodoItem.js","pages/Todo/index.tsx","service/types.ts","utils/index.ts","styles/Input.styles.tsx","service/index.ts","service/api-frontend.ts","assets/images/logo.svg","styles/Alert.styles.tsx","utils/axios.ts","service/api-fullstack.ts"],"names":["LogoutIcon","styled","span","props","theme","colors","gray","HeaderContainer","header","mapDispatchToProps","logout","type","types","connector","connect","state","history","useHistory","useEffect","onClick","push","PATH","LOGIN","className","MainLayoutContainer","div","MainLayout","children","TodoContainer","TodoContent","TodoLogo","TodoWrapper","TaskContainer","color","Container","Left","Center","Right","ToolbarItem","ActiveItem","palette","primary","main","white","Item","Toolbar","isActiveView","onToggleAllTodo","onClickTab","listStatus","onDeleteAllTodo","useState","value","active","setActive","style","title","length","map","v","i","label","timeout","CreateTodo","inputRef","useRef","handleCreate","onKeyDownAction","e","key","current","clearTimeout","cb","setTimeout","ref","placeholder","onKeyDown","setTodoList","todoList","payload","getTodoList","dispatch","Service","then","res","actions","catch","err","Promise","reject","TodoThunk","createTodo","newTodo","localStorage","getItem","JSON","parse","unshift","setItem","stringify","updateTodo","field","id","content","todoId","checked","TodoStatus","COMPLETED","updateAllTodo","status","deleteAllTodo","deleteTodo","TodoList","onClickDeleteTodo","onUpdateTodoStatus","onUpdateTodoContent","todo","edit","setEdit","handleClickOutside","contains","target","document","removeEventListener","error","isTodoCompleted","newValue","onDoubleClick","addEventListener","TodoThunks","showing","setShowing","setError","todoListAvailable","filter","ACTIVE","reduce","accum","updateTodoList","resp","message","isCompleted","statusValue","src","logoImg","width","height","alt","fontSize","index","emptyListImg","IAPI","generateColor","Math","floor","random","InputContainer","InputLabel","small","fontWeight","semi","LabelRequired","red","Input","input","normal","dark","InputEndAdornment","blue","process","REACT_APP_WHOAMI","require","default","ApiFrontend","username","password","a","loginTime","Date","getTime","resolve","token","code","created_date","toISOString","shortid","user_id","findIndex","splice","Alert","ins","axios","create","baseURL","interceptors","request","use","headers","Authorization","ApiFullstack","get","data","post","put"],"mappings":"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","file":"static/js/5.71ddb401.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const LogoutIcon = styled.span`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    background: ${(props) => props.theme.colors.gray[1]};\n    color: ${(props) => props.theme.colors.gray[6]};\n    padding: 0.5rem 1rem;\n    border-radius: 8px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n    :hover {\n        color: ${(props) => props.theme.colors.gray[7]};\n    }\n`\n\nexport const HeaderContainer = styled.header`\n    position: absolute;\n    right: 2rem;\n    top: 2rem;\n`","import { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { logout } from \"App/App.actions\";\nimport { useHistory } from \"react-router-dom\";\nimport { LogoutIcon, HeaderContainer } from \"./Header.styles\";\nimport { PATH } from \"constants/paths\";\nimport { IoPowerOutline } from \"react-icons/io5\";\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  logout,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {}\n\nconst Header = (props: Props) => {\n  const { logout } = props;\n  const history = useHistory();\n  const handleLogout = () => {\n    logout();\n    history.push(PATH.LOGIN);\n  };\n  useEffect(() => {}, [history]);\n\n  return (\n    <HeaderContainer>\n      <LogoutIcon onClick={handleLogout} className=\"cursor-pointer\">\n        <IoPowerOutline />\n        <span className=\"pl-8\">Logout</span>\n      </LogoutIcon>\n    </HeaderContainer>\n  );\n};\n\nexport default connector(Header);\n","import * as types from \"./App.constants\"\n\nexport const logout = () => ({\n  type: types.LOGOUT\n})\n","import styled from \"styled-components\";\n\nexport const MainLayoutContainer = styled.div`\n  background: white;\n  width: 80rem;\n  height: 100vh;\n  padding: 16px;\n`;\nexport const MainLayoutWrapper = styled.div`\n  background: white;\n  width: 80rem;\n  height: 100vh;\n  padding: 16px;\n`;\n","import React, { ReactNode } from \"react\";\nimport Header from \"components/Header/Header\";\nimport { MainLayoutContainer } from \"./MainLayout.styles\";\ninterface Props {\n  children: ReactNode;\n}\n\nexport default function MainLayout(props: Props) {\n  const { children } = props;\n  return (\n    <MainLayoutContainer>\n      <main>\n        <Header />\n        <div>{children}</div>\n      </main>\n    </MainLayoutContainer>\n  );\n}\n","import styled from \"styled-components\"\n\nexport const TodoContainer = styled.div`\n  position: relative;\n  /* border: 1px solid rgba(0,0,0, 0.13); */\n  border-radius: 8px;\n  width: 500px;\n  padding: 24px;\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n  margin: 5rem auto auto;\n`\nexport const TodoContent = styled.div`\n  margin: 1rem auto auto;\n  padding: 4px 8px;\n`\n\nexport const TodoLogo = styled.div`\n  position: absolute;\n  top: -2rem;\n  left: 30%;\n  background: white;\n  padding: 0 1rem;\n`\n\nexport const TodoWrapper = styled.div`\n  margin-top: 1rem;\n  padding: 0 8px;\n`\nexport const TaskContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 2px;\n  margin: 8px 0;\n  border-left: 4px solid ${(props) => props.theme.colors[props.color || 'blue'][5]};\n  color: ${(props) => props.theme.colors[props.color || 'blue'][5]};\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n \n  \n`\n\nexport const TaskItemContainer = styled.div`\n  /* flex-grow: 1;\n  height: 100px;\n  align-items: center;\n  display: flex; */\n`\n\n// Toolbar\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n`\nexport const Left = styled.div`\n  flex-grow: 0;\n  display: flex;\n  align-items: center;\n`\n\nexport const Center = styled.div`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`\nexport const Right = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const ToolbarItem = styled.div`\n  padding: 4px 8px;\n  cursor: pointer;\n`\n\nexport const ActiveItem = styled.div`\n  background: ${(props) => props.theme.palette.primary.main};\n  color: ${(props) => props.theme.colors.white};\n  border-radius: 8px;\n  padding: 4px 8px\n`\n\nexport const Item = styled.div`\n  border-radius: 8px;\n  padding: 4px 8px;\n`","import { useState } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdDelete } from \"react-icons/md\";\nimport { ToolbarItem, Container, Center, Left, Right, ActiveItem, Item } from '../Todo.styles';\nexport default function Toolbar(props) {\n  const {\n    isActiveView = false,\n    onToggleAllTodo = () => { },\n    onClickTab = () => { },\n    listStatus = [],\n    onDeleteAllTodo = () => { }\n  } = props;\n  const [active, setActive] = useState(listStatus[0].value);\n  return (\n    <Container>\n      <Left\n        style={{}}\n        className=\"cursor-pointer\"\n        onClick={() => {\n          onToggleAllTodo(!isActiveView);\n        }}\n        title='Mark all done'\n      >\n        {isActiveView ? (\n          <ImCheckboxChecked color='green' />\n        ) : (\n          <ImCheckboxUnchecked color='green' />\n        )}\n      </Left>\n      <Center className='flex-center'>\n        {listStatus &&\n          listStatus.length &&\n          listStatus.map((v, i) => {\n            return (\n              <ToolbarItem\n                key={i}\n                onClick={() => {\n                  setActive(v.value)\n                  onClickTab(v.value)\n                }}\n              >\n                {active === v.value ? <ActiveItem>{v.label}</ActiveItem> : <Item>\n                  {v.label}\n                </Item>}\n              </ToolbarItem>\n            );\n          })}\n      </Center>\n\n      <Right\n        className=\"cursor-pointer\"\n        onClick={onDeleteAllTodo}\n        title='Clear all todo list'\n      >\n        <MdDelete color='red' />\n      </Right>\n    </Container>\n  );\n}\n","import { useRef } from \"react\";\n\nimport { CgEnter } from \"react-icons/cg\";\nimport { Input, InputContainer, InputEndAdornment } from \"styles/Input.styles\";\n\nlet timeout = null;\n\nexport default function CreateTodo(props) {\n  const inputRef = useRef(null);\n  const { handleCreate = () => { } } = props;\n  const onKeyDownAction = (e) => {\n    if (e.key === \"Enter\" && inputRef.current) {\n      const value = inputRef.current.value;\n      if (timeout) {\n        clearTimeout(timeout); // NOTE: optimize when user typing\n      }\n      const cb = () => {\n        inputRef.current.value = \"\";\n      };\n      timeout = setTimeout(() => {\n        handleCreate(value, cb);\n      }, 200);\n    }\n  };\n\n  return (\n    <InputContainer>\n      <Input\n        ref={inputRef}\n        placeholder='What need to be done?'\n        onKeyDown={onKeyDownAction}\n      />\n      <InputEndAdornment title=\"Click to add\">\n        <div onClick={() => {\n          onKeyDownAction({ key: \"Enter\" });\n        }}><CgEnter /></div>\n      </InputEndAdornment>\n    </InputContainer>\n  );\n}\n","import * as types from \"./Todo.constants\"\nimport {Todo} from \"models/todo\";\n\nexport function getTodoList() {\n  return {\n    type: types.GET_TODO_LIST,\n  }\n}\n\nexport interface SetTodoAction {\n  type: typeof types.SET_TODO_LIST,\n  payload: Array<Todo>\n}\nexport function setTodoList(todoList: Array<Todo>): SetTodoAction {\n  return {\n    type: types.SET_TODO_LIST,\n    payload: todoList\n  }\n}\n\nexport interface CreateTodoAction {\n  type: typeof types.CREATE_TODO,\n  payload: Todo\n}\n\n\nexport function createTodo(newTodo: Todo): CreateTodoAction {\n  return {\n    type: types.CREATE_TODO,\n    payload: newTodo\n  } \n}\n\nexport interface UpdateTodoAction {\n  type: typeof types.UPDATE_TODO,\n  payload: {\n    field: string,\n    value: any,\n    id: string\n  }\n}\n\nexport function updateTodo(field: string, value: any, id: string): UpdateTodoAction {\n  return {\n    type: types.UPDATE_TODO,\n    payload: {\n      field,\n      value,\n      id\n    }\n  }\n}\n\nexport interface UpdateAllTodoAction {\n  type: typeof types.TOGGLE_ALL_TODO_LIST,\n  payload: {\n    status: string\n  }\n}\n\nexport function updateAllTodo(status: string): UpdateAllTodoAction {\n  return {\n    type: types.TOGGLE_ALL_TODO_LIST,\n    payload: {\n      status\n    }\n  }\n}\n\nexport interface UpdateTodoStatusAction {\n  type: typeof types.UPDATE_TODO_STATUS,\n  payload: {\n    todoId: string,\n    checked: boolean\n  }\n}\n\nexport function updateTodoStatus(todoId: string, checked: boolean): UpdateTodoStatusAction {\n  return {\n    type: types.UPDATE_TODO_STATUS,\n    payload: {\n      todoId,\n      checked\n    }\n  }\n}\n\nexport interface UpdateTodoContentAction {\n  type: typeof types.UPDATE_TODO_STATUS_CONTENT,\n  payload: {\n    content: string, todoId: string\n  }\n}\n\nexport function updateTodoContent(content: string, todoId: string): UpdateTodoContentAction {\n  return {\n    type: types.UPDATE_TODO_STATUS_CONTENT,\n    payload: {\n      content,\n      todoId\n    }\n  }\n}\n\n//////////////\nexport interface DeleteTodoAction {\n  type: typeof types.DELETE_TODO,\n  payload: string\n}\n\nexport function deleteTodo(todoId: string): DeleteTodoAction {\n  return {\n    type: types.DELETE_TODO,\n    payload: todoId\n  }\n}\n\n//////////////\nexport interface DeleteAllTodoListAction {\n  type: typeof types.DELETE_ALL_TODO_LIST,\n}\n\nexport function deleteAllTodoList(): DeleteAllTodoListAction {\n  return {\n    type: types.DELETE_ALL_TODO_LIST,\n  }\n}\n\n///////////\nexport interface ToggleAllTodoAction {\n  type: typeof types.TOGGLE_ALL_TODO_LIST,\n  payload: boolean\n}\n\nexport function toggleAllTodo(checked: boolean): ToggleAllTodoAction {\n  return {\n    type: types.TOGGLE_ALL_TODO_LIST,\n    payload: checked\n  }\n}","import Service from \"service\"\nimport * as actions from \"./Todo.actions\";\nimport { TodoStatus } from 'models/todo';\n\nexport const getTodoList = () => dispatch => {\n  dispatch(actions.getTodoList())\n  return Service.getTodoList()\n    .then((res: any) => {\n      return dispatch(actions.setTodoList(res || []));\n    })\n  .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const createTodo = (payload) => dispatch => {\n  dispatch(actions.createTodo(payload))\n  return Service.createTodo(payload)\n    .then((res: any) => {\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\"; \n      todoList = JSON.parse(todoList);\n      todoList.unshift(res);\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return dispatch(getTodoList());\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const updateTodo = (payload) => dispatch => {\n  const { field, value, id } = payload;\n  dispatch(actions.updateTodo(field, value, id))\n  return Service.updateTodo(field, value, id)\n    .then((res: any) => {\n      switch (field) {\n        case \"content\":\n        dispatch(actions.updateTodoContent(id, value))\n            break;\n        case \"status\":\n            dispatch(actions.updateTodoStatus(id, value === TodoStatus.COMPLETED))\n            break;\n        default:\n          break;\n      }\n      return dispatch(getTodoList());\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const updateAllTodo = (status: any) => dispatch => {\n  dispatch(actions.updateAllTodo(status))\n  return Service.updateAllTodo(status)\n    .then((res: any) => {\n      return dispatch(actions.toggleAllTodo(status));\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\nexport const deleteAllTodo = () => dispatch => {\n  dispatch(actions.deleteAllTodoList())\n  return Service.deleteAllTodo()\n    .then((res: any) => {\n      return dispatch(actions.setTodoList([]));\n    })\n   .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nexport const deleteTodo = (id: string) => dispatch => {\n  dispatch(actions.deleteTodo(id))\n  return Service.deleteTodo(id)\n    .then((res: any) => {\n      return dispatch(actions.setTodoList(res || []));\n    })\n    .catch((err: any) => {\n      return Promise.reject(err);\n    })\n}\n\nconst TodoThunk = {\n  createTodo,\n  getTodoList,\n  updateTodo,\n  updateAllTodo,\n  deleteAllTodo,\n  deleteTodo\n}\n\nexport default TodoThunk;","export default __webpack_public_path__ + \"static/media/empty-list.c98e7c84.svg\";","import { useEffect, useRef, useState } from \"react\";\n\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdDelete } from \"react-icons/md\";\n\nimport { isTodoCompleted } from \"utils\";\nimport { TaskContainer, Center, Left, Right } from '../Todo.styles';\nimport { Input } from \"styles/Input.styles\";\n\nexport default function TodoList({ ...props }) {\n  const {\n    onClickDeleteTodo = () => { },\n    onUpdateTodoStatus = () => { },\n    onUpdateTodoContent = () => { },\n    todo = {\n      content: \"\",\n    },\n  } = props;\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const [edit, setEdit] = useState(false);\n  const handleClickOutside = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setEdit(false);\n      if (inputRef && inputRef.current) {\n        inputRef.current.value = todo.content;\n      }\n      try {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      } catch (error) { }\n    }\n  };\n\n  const handleEnterKeyboard = (e) => {\n    if (e.key === \"Enter\") {\n      const newValue =\n        (inputRef && inputRef.current && inputRef.current.value) || \"\";\n      onUpdateTodoContent(newValue, todo.id, setEdit(false));\n      try {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      } catch (error) { }\n    }\n  };\n  useEffect(() => {\n    if (edit && inputRef && inputRef.current) {\n      inputRef.current.value = todo.content;\n    }\n    return document.removeEventListener(\"mousedown\", handleClickOutside);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [edit]);\n  return (\n    <TaskContainer\n      ref={ref}\n      color={todo.color}\n    >\n      <Left>\n        <div\n          onClick={() => onUpdateTodoStatus(!isTodoCompleted(todo), todo.id)}\n        >\n          <span className='flex-box cursor-pointer'>\n            {isTodoCompleted(todo) ? <ImCheckboxChecked /> : <ImCheckboxUnchecked />}\n          </span>\n        </div>\n      </Left>\n      {!edit ? (\n        <Center className='justify-left ph-8' title=\"Doubleclick to edit content\"\n          onDoubleClick={() => {\n            if (!edit) {\n              setEdit(true);\n              document.addEventListener(\"mousedown\", handleClickOutside);\n            }\n          }}\n        >\n          <span className={isTodoCompleted(todo) ? 'text-line-through' : ''}>{todo.content}</span>\n        </Center>\n      ) : (\n        <Center className='justify-left ph-8'>\n          <Input\n            ref={inputRef}\n            onKeyDown={handleEnterKeyboard}\n            className=\"ma-text ma-input-edit ma-input-edit-todo\"\n          />\n        </Center>\n      )}\n      <Right className='cursor-pointer' onClick={() => onClickDeleteTodo(todo.id)}>\n        <MdDelete />\n      </Right>\n    </TaskContainer>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport MainLayout from \"layouts/MainLayout\";\nimport { TodoStatus } from \"models/todo\";\nimport { isTodoCompleted } from \"utils\";\nimport Toolbar from \"./components/Toolbar\";\nimport CreateTodo from \"./components/CreateTodo\";\nimport TodoThunks from \"./Todo.thunks\";\nimport {\n  TodoContainer,\n  TodoLogo,\n  TodoWrapper,\n  TodoContent,\n} from \"./Todo.styles\";\nimport logoImg from \"assets/images/logo.svg\";\nimport emptyListImg from \"assets/images/empty-list.svg\";\nimport { Alert } from \"styles/Alert.styles\";\nimport { FiAlertOctagon } from \"react-icons/fi\";\nimport TodoItems from \"./components/TodoItem\";\n\ntype EnhanceTodoStatus = TodoStatus | \"ALL\";\n\nconst mapStateToProps = (state) => {\n  return {\n    todoList: state.todo.todoList,\n  };\n};\n\nconst mapDispatchToProps = {\n  getTodoList: TodoThunks.getTodoList,\n  createTodo: TodoThunks.createTodo,\n  updateTodo: TodoThunks.updateTodo,\n  updateAllTodo: TodoThunks.updateAllTodo,\n  deleteAllTodo: TodoThunks.deleteAllTodo,\n  deleteTodo: TodoThunks.deleteTodo,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {}\nconst TodoPage = (props: Props) => {\n  const {\n    getTodoList,\n    createTodo,\n    updateTodo,\n    updateAllTodo,\n    deleteAllTodo,\n    todoList,\n    deleteTodo,\n  } = props;\n  const [showing, setShowing] = useState<EnhanceTodoStatus>(\"ALL\");\n  const [error, setError] = useState<String>(\"\");\n\n  const todoListAvailable = todoList.filter((todo) => {\n    switch (showing) {\n      case TodoStatus.ACTIVE:\n        return todo.status === TodoStatus.ACTIVE;\n      case TodoStatus.COMPLETED:\n        return todo.status === TodoStatus.COMPLETED;\n      default:\n        return true;\n    }\n  });\n  const isActiveView = todoList.reduce(function (accum, todo) {\n    return isTodoCompleted(todo) ? accum : accum + 1;\n  }, 0);\n\n  useEffect(() => {\n    getTodoList();\n  }, [getTodoList]);\n\n  const handleCreate = (value: string, cb: Function) => {\n    if (!value) {\n      setError(\"Please enter todo content\");\n      return;\n    }\n    createTodo(value)\n      .then((resp) => {\n        cb && cb();\n      })\n      .catch((error) => {\n        setError(error?.message);\n      });\n  };\n\n  const updateTodoList = (id: string, field: string, value: string) => {\n    updateTodo({\n      id,\n      field,\n      value,\n    })\n      .then((resp) => {})\n      .catch((error) => {\n        setError(error?.message);\n      });\n  };\n\n  const onUpdateTodoStatus = (isCompleted: boolean, todoId: string) => {\n    const statusValue = isCompleted ? TodoStatus.COMPLETED : TodoStatus.ACTIVE;\n    updateTodoList(todoId, \"status\", statusValue);\n  };\n  const onUpdateTodoContent = (content: string, todoId: string, cb: any) => {\n    if (!content) {\n      setError(\"Content can't empty\");\n      return;\n    }\n    updateTodoList(todoId, \"content\", content);\n  };\n  const onToggleAllTodo = (e: boolean) => {\n    updateAllTodo(e);\n  };\n  const onDeleteAllTodo = () => {\n    if (\n      !todoListAvailable ||\n      (todoListAvailable && !todoListAvailable.length)\n    ) {\n      return;\n    }\n    deleteAllTodo();\n  };\n\n  const onClickDeleteTodo = (id: string) => {\n    deleteTodo(id);\n  };\n\n  return (\n    <MainLayout>\n      <TodoContainer>\n        <TodoLogo>\n          <img src={logoImg} width=\"150px\" height=\"50px\" alt=\"logo\" />\n        </TodoLogo>\n        {error && (\n          <Alert className=\"mt-8\">\n            <FiAlertOctagon fontSize=\"24px\" />\n            <span className=\"pl-8\">{error}</span>\n          </Alert>\n        )}\n        <TodoWrapper>\n          <CreateTodo handleCreate={handleCreate} />\n          <TodoContent>\n            {todoList && todoList.length ? (\n              <Toolbar\n                isActiveView={isActiveView === 0}\n                onToggleAllTodo={onToggleAllTodo}\n                onClickTab={setShowing}\n                listStatus={[\n                  {\n                    value: \"ALL\",\n                    label: \"All\",\n                  },\n                  {\n                    value: TodoStatus.ACTIVE,\n                    label: \"Active\",\n                  },\n                  {\n                    value: TodoStatus.COMPLETED,\n                    label: \"Completed\",\n                  },\n                ]}\n                onDeleteAllTodo={onDeleteAllTodo}\n              />\n            ) : null}\n            <div className=\"scroll-bar\">\n              {todoListAvailable.length ? (\n                <>\n                  {todoListAvailable.map((todo, index) => {\n                    return (\n                      <TodoItems\n                        key={index}\n                        onClickDeleteTodo={onClickDeleteTodo}\n                        onUpdateTodoStatus={onUpdateTodoStatus}\n                        onUpdateTodoContent={onUpdateTodoContent}\n                        todo={todo}\n                      />\n                    );\n                  })}\n                </>\n              ) : (\n                <div className=\"text-center pt-8\">\n                  <img\n                    src={emptyListImg}\n                    width=\"300px\"\n                    height=\"300px\"\n                    alt=\"empty-task\"\n                  />\n                  <br />\n                  <h5>No Tasks</h5>\n                </div>\n              )}\n            </div>\n          </TodoContent>\n        </TodoWrapper>\n      </TodoContainer>\n    </MainLayout>\n  );\n};\n\nexport default connector(TodoPage);\n","import {Todo} from 'models/todo';\nexport abstract class IAPI {\n    abstract signIn(username: string, password: string) : Promise<Object>\n    abstract getTodoList() : Promise<Array<Todo>>\n    abstract createTodo(content: string) : Promise<Todo>\n    abstract updateTodo(field: any,value : any, id: string) : Promise<Todo>\n    abstract deleteTodo(id: string) : Promise<Array<Todo>>\n    abstract deleteAllTodo() : Promise<String>\n    abstract updateAllTodo(status: boolean) : Promise<String>\n}","import { Todo, TodoStatus } from 'models/todo';\n\nconst colors = [\"gray\", \"red\", \"pink\", \"grape\", \"violet\",\n  \"indigo\", \"blue\", \"cyan\", \"teal\", \"green\", \"lime\", \"yellow\", \"orange\"];\n\nexport function isTodoCompleted(todo: Todo): boolean {\n  return todo.status === TodoStatus.COMPLETED;\n}\n\nexport function isTodoActive(todo: Todo): boolean {\n  return todo.status === TodoStatus.ACTIVE;\n}\n\nexport function generateColor() {\n  return colors[Math.floor(Math.random() * colors.length)];\n}","import styled from \"styled-components\";\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const InputLabel = styled.label`\n  color: ${(props) => props.theme.colors.gray[7]};\n  font-size: ${(props) => props.theme.fontSize.small};\n  font-weight: ${(props) => props.theme.fontWeight.semi};\n  padding-left: 8px;\n  text-align: left;\n`;\nexport const LabelRequired = styled.span`\n  color: ${(props) => props.theme.colors.red[8]};\n`;\nexport const Input = styled.input`\n  background: white;\n  border-radius: 8px;\n  border: ${(props) => props.theme.colors.gray[2]} 1px solid;\n  transition: all 200ms ease-in-out;\n  min-height: 36px;\n  outline: none;\n  padding: 0 8px;\n  font-size: ${(props) => props.theme.fontSize.normal};\n  color: ${(props) => props.theme.colors.primary.dark[3]};\n  margin: 4px 0;\n  width: 100%;\n  &:hover {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n`;\n\nexport const InputEndAdornment = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 30%;\n  color: ${(props) => props.theme.colors.blue[3]};\n  cursor: pointer;\n`;\n","import {IAPI} from './types';\n\nlet Service : IAPI;\nif (process.env.REACT_APP_WHOAMI === 'frontend') {\n    Service = require('./api-frontend').default as IAPI\n} else {\n    Service = require('./api-fullstack').default as IAPI\n}\n\nexport default Service","import { IAPI } from \"./types\";\nimport shortid from \"shortid\";\n\nimport { Todo, TodoStatus } from \"models/todo\";\nimport { generateColor } from 'utils';\n\nconst mockToken = \"testabc.xyz.ahk\";\nclass ApiFrontend extends IAPI {\n  async signIn(username: string, password: string): Promise<Object> {\n    if (username === \"firstUser\" && password === \"example\") {\n      const loginTime = new Date().getTime();\n      return Promise.resolve({\n        token: mockToken,\n        username: \"firstUser\",\n        loginTime: loginTime,\n      });\n    }\n    return Promise.reject({ code: 400, message: 'The username or password is incorrect. Please try again.' });\n  }\n  /*\n    fake data api - save data to local storage\n    add some new api : update, delete all\n   */\n  async createTodo(content: string): Promise<Todo> {\n    try {\n      const newTodo = {\n        content: content,\n        created_date: new Date().toISOString(),\n        status: TodoStatus.ACTIVE,\n        id: shortid(),\n        user_id: \"firstUser\",\n        color: generateColor()\n      };\n      return Promise.resolve(newTodo as Todo);\n    } catch (error) {\n      return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n\n  async getTodoList(): Promise<Todo[]> {\n    try {\n       let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async updateTodo(field: any, value: any, id: string): Promise<Todo> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      todoList[index][field] = value;\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList[index] as Todo);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async deleteTodo(id: string): Promise<Todo[]> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      if (index > -1) {\n        todoList.splice(index, 1);\n      }\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n \n  async deleteAllTodo(): Promise<String> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = [];\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Delete Success\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n    \n  }\n  async updateAllTodo(status: Boolean): Promise<String> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      todoList = todoList.map((v: Todo) => {\n          v.status = status ? TodoStatus.COMPLETED : TodoStatus.ACTIVE;\n          return v;\n      })\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Updated\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n}\n\nexport default new ApiFrontend();\n","export default __webpack_public_path__ + \"static/media/logo.05536d55.svg\";","import styled from \"styled-components\";\n\nexport const Alert = styled.div`\n  background: ${(props) => props.theme.palette.error.main};\n  color: ${(props) => props.theme.palette.error.dark};\n  padding: 6px 16px;\n  display: flex;\n  font-weight: 400;\n  border-radius: 4px;\n  align-items: center;\n`;","import axios from 'axios';\n\nconst ins = axios.create({\n    baseURL: 'http://localhost:5050',\n    timeout: 10000\n})\n\nins.interceptors.request.use((request)=>{\n    request.headers.Authorization = localStorage.getItem('token')\n\n    return request\n})\n\nexport default ins","import { IAPI } from './types';\nimport { Todo } from '../models/todo';\nimport axios from '../utils/axios';\nimport { AxiosResponse } from 'axios';\n\nclass ApiFullstack extends IAPI {\n    async signIn(username: string, password: string): Promise<Object> {\n        const resp = await axios.get<AxiosResponse<string>>(`/login?user_id=${username}&password=${password}`);\n\n        return resp.data.data\n    }\n\n    async createTodo(content: string): Promise<Todo> {\n        const resp = await axios.post<AxiosResponse<Todo>>(`/tasks`, {\n            content\n        });\n\n        return resp.data.data;\n    }\n\n    async getTodoList(): Promise<Array<Todo>> {\n        const resp = await axios.get<AxiosResponse<Array<Todo>>>(`/tasks`);\n\n        return resp.data.data;\n    }\n\n    // NOTE: Only fake handle functions to cross error warning\n\n    async updateTodo(field: any,value : any, id: string): Promise<Todo> {\n        const resp = await axios.put<AxiosResponse<Todo>>(`/tasks`, {\n            id\n        });\n        return resp.data.data;\n    }\n    async deleteTodo(id: string): Promise<Todo[]> {\n        return Promise.resolve([])\n    }\n    async deleteAllTodo(): Promise<String>{\n        return Promise.resolve('')\n    }\n    async updateAllTodo(status: boolean): Promise<String>{\n        return Promise.resolve('')\n    }\n}\n\n\nexport default new ApiFullstack();"],"sourceRoot":""}