{"version":3,"sources":["pages/Login/Login.styles.ts","styles/Button.styles.tsx","pages/Login/index.tsx","pages/Login/Login.thunks.ts","pages/Login/Login.actions.ts","service/types.ts","utils/index.ts","styles/Input.styles.tsx","service/index.ts","service/api-frontend.ts","assets/images/logo.svg","styles/Alert.styles.tsx","utils/axios.ts","service/api-fullstack.ts"],"names":["Title","styled","h5","props","theme","colors","gray","Container","div","Button","button","palette","primary","main","white","fontSize","normal","dark","mapDispatchToProps","login","payload","dispatch","type","types","Service","signIn","username","password","then","res","localStorage","setItem","token","actions","catch","err","Promise","reject","connector","connect","state","loading","history","useHistory","useState","setUsername","showPassword","setShowPassword","setPassword","error","setError","errorMessage","setErrorMessage","submit","event","a","preventDefault","prev","push","PATH","HOME","message","onSubmit","id","className","src","logoImg","width","height","alt","placeholder","onChange","target","value","onClick","color","IAPI","isTodoCompleted","todo","status","TodoStatus","COMPLETED","generateColor","Math","floor","random","length","InputContainer","InputLabel","label","small","fontWeight","semi","LabelRequired","span","red","Input","input","InputEndAdornment","blue","process","REACT_APP_WHOAMI","require","default","ApiFrontend","loginTime","Date","getTime","resolve","code","content","newTodo","created_date","toISOString","ACTIVE","shortid","user_id","todoList","getItem","JSON","parse","field","index","findIndex","stringify","splice","map","v","Alert","ins","axios","create","baseURL","timeout","interceptors","request","use","headers","Authorization","ApiFullstack","get","resp","data","post","put"],"mappings":"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","file":"static/js/4.af12de83.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Title = styled.h5`\n  margin-bottom: 1rem;\n  color: ${(props) => props.theme.colors.gray[5]};\n  font-weight: normal;\n`\n\nexport const Container = styled.div`\n  background: white;\n  padding: 2rem 6rem;\n  border-radius: 8px;\n  width: 30rem;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;\n`\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  background: ${(props) => props.theme.palette.primary.main};\n  color: ${(props) => props.theme.colors.white};\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  min-height: 32px;\n  min-width: 80px;\n  padding: 4px 8px;\n  width: 100%;\n  font-size: ${(props) => props.theme.fontSize.normal};\n  cursor: pointer;\n  &:hover {\n    background: ${(props) => props.theme.colors.primary.dark[1]};\n  }\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { login } from \"./Login.thunks\";\nimport { Title, Container } from \"./Login.styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { PATH } from \"constants/paths\";\nimport logoImg from \"assets/images/logo.svg\";\n\nimport {\n  InputLabel,\n  Input,\n  LabelRequired,\n  InputContainer,\n  InputEndAdornment,\n} from \"styles/Input.styles\";\nimport { Button } from \"styles/Button.styles\";\nimport { Alert } from \"styles/Alert.styles\";\nimport { FiAlertOctagon } from \"react-icons/fi\";\nimport { IoAlertCircle, IoEyeOutline, IoEyeOffOutline } from \"react-icons/io5\";\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.login.loading,\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport interface Props extends ConnectedProps<typeof connector> {}\n\nconst Login = (props: Props) => {\n  const history = useHistory();\n  const { login, loading } = props;\n  const [username, setUsername] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n    setErrorMessage((prev: any) => ({\n      ...prev,\n      username: \"\",\n    }));\n  };\n\n  const handlePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n    setErrorMessage((prev: any) => ({\n      ...prev,\n      password: \"\",\n    }));\n  };\n\n  const handleError = () => {\n    if (!username) {\n      setErrorMessage((prev: any) => ({\n        ...prev,\n        username: \"Username is required.\",\n      }));\n    }\n    if (!password) {\n      setErrorMessage((prev: any) => ({\n        ...prev,\n        password: \"Password is required.\",\n      }));\n    }\n  };\n\n  const submit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!username || !password || loading) {\n      handleError();\n      return;\n    }\n\n    const payload = { username, password };\n    login(payload)\n      .then((res) => {\n        history.push(PATH.HOME);\n      })\n      .catch((err) => {\n        setError(err.payload.message);\n      });\n  };\n\n  return (\n    <Container>\n      <div>\n        <div>\n          <form onSubmit={submit} id=\"login-form\">\n            <Title className=\"text-center\">\n              <img src={logoImg} width=\"150px\" height=\"50px\" alt=\"logo\" />\n              <br />\n              Welcome to my Todo List Challenge\n            </Title>\n\n            {error && (\n              <Alert>\n                <FiAlertOctagon fontSize=\"24px\" />{\" \"}\n                <span className=\"pl-8\">{error}</span>\n              </Alert>\n            )}\n            <div className=\"pv-8\">\n              <InputLabel>Username</InputLabel>\n              <LabelRequired>*</LabelRequired>\n              <Input\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={handleUsername}\n                className={errorMessage?.username ? \"border-err\" : \"\"}\n              />\n              {errorMessage?.username && (\n                <div className=\"text-error pl-8 flex-box\">\n                  <IoAlertCircle />\n                  <span className=\"pl-8\">{errorMessage?.username}</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"pv-8\">\n              <InputLabel>Password</InputLabel>\n              <LabelRequired>*</LabelRequired>\n              <InputContainer>\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Password\"\n                  onChange={handlePassword}\n                  className={errorMessage?.password ? \"border-err\" : \"\"}\n                />\n                <InputEndAdornment>\n                  <div\n                    onClick={() => {\n                      setShowPassword(!showPassword);\n                    }}\n                  >\n                    {showPassword ? (\n                      <IoEyeOutline color=\"gray\" />\n                    ) : (\n                      <IoEyeOffOutline color=\"gray\" />\n                    )}\n                  </div>\n                </InputEndAdornment>\n              </InputContainer>\n\n              {errorMessage?.password && (\n                <div className=\"text-error pl-8 flex-box\">\n                  <IoAlertCircle />\n                  <span className=\"pl-8\">{errorMessage?.password}</span>\n                </div>\n              )}\n            </div>\n            <div className=\"pv-8 text-center\">\n              <Button type=\"submit\">Login</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default connector(Login);\n","import Service from \"service\"\nimport * as actions from \"./Login.actions\"\n\nexport const login = (payload: ReqLogin) => dispatch => {\n  dispatch(actions.loginRequested())\n  return Service.signIn(payload.username, payload.password)\n    .then((res:any) => {\n      localStorage.setItem(\"token\", res.token)\n      return dispatch(actions.loginSuccess(res))\n    })\n    .catch(err => {\n      return Promise.reject(dispatch(actions.loginFailed(err)))\n    })\n}\n","import * as types from \"./Login.constants\"\n\nexport const loginRequested = () => ({\n  type: types.LOGIN_REQUESTED\n})\n\nexport const loginSuccess = payload => ({\n  type: types.LOGIN_SUCCESS,\n  payload\n})\n\nexport const loginFailed = payload => ({\n  type: types.LOGIN_FAILED,\n  payload\n})\n","import {Todo} from 'models/todo';\nexport abstract class IAPI {\n    abstract signIn(username: string, password: string) : Promise<Object>\n    abstract getTodoList() : Promise<Array<Todo>>\n    abstract createTodo(content: string) : Promise<Todo>\n    abstract updateTodo(field: any,value : any, id: string) : Promise<Todo>\n    abstract deleteTodo(id: string) : Promise<Array<Todo>>\n    abstract deleteAllTodo() : Promise<String>\n    abstract updateAllTodo(status: boolean) : Promise<String>\n}","import { Todo, TodoStatus } from 'models/todo';\n\nconst colors = [\"gray\", \"red\", \"pink\", \"grape\", \"violet\",\n  \"indigo\", \"blue\", \"cyan\", \"teal\", \"green\", \"lime\", \"yellow\", \"orange\"];\n\nexport function isTodoCompleted(todo: Todo): boolean {\n  return todo.status === TodoStatus.COMPLETED;\n}\n\nexport function isTodoActive(todo: Todo): boolean {\n  return todo.status === TodoStatus.ACTIVE;\n}\n\nexport function generateColor() {\n  return colors[Math.floor(Math.random() * colors.length)];\n}","import styled from \"styled-components\";\n\nexport const InputContainer = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const InputLabel = styled.label`\n  color: ${(props) => props.theme.colors.gray[7]};\n  font-size: ${(props) => props.theme.fontSize.small};\n  font-weight: ${(props) => props.theme.fontWeight.semi};\n  padding-left: 8px;\n  text-align: left;\n`;\nexport const LabelRequired = styled.span`\n  color: ${(props) => props.theme.colors.red[8]};\n`;\nexport const Input = styled.input`\n  background: white;\n  border-radius: 8px;\n  border: ${(props) => props.theme.colors.gray[2]} 1px solid;\n  transition: all 200ms ease-in-out;\n  min-height: 36px;\n  outline: none;\n  padding: 0 8px;\n  font-size: ${(props) => props.theme.fontSize.normal};\n  color: ${(props) => props.theme.colors.primary.dark[3]};\n  margin: 4px 0;\n  width: 100%;\n  &:hover {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: rgba(235, 241, 249, 1) 0 0 0 3px;\n  }\n`;\n\nexport const InputEndAdornment = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 30%;\n  color: ${(props) => props.theme.colors.blue[3]};\n  cursor: pointer;\n`;\n","import {IAPI} from './types';\n\nlet Service : IAPI;\nif (process.env.REACT_APP_WHOAMI === 'frontend') {\n    Service = require('./api-frontend').default as IAPI\n} else {\n    Service = require('./api-fullstack').default as IAPI\n}\n\nexport default Service","import { IAPI } from \"./types\";\nimport shortid from \"shortid\";\n\nimport { Todo, TodoStatus } from \"models/todo\";\nimport { generateColor } from 'utils';\n\nconst mockToken = \"testabc.xyz.ahk\";\nclass ApiFrontend extends IAPI {\n  async signIn(username: string, password: string): Promise<Object> {\n    if (username === \"firstUser\" && password === \"example\") {\n      const loginTime = new Date().getTime();\n      return Promise.resolve({\n        token: mockToken,\n        username: \"firstUser\",\n        loginTime: loginTime,\n      });\n    }\n    return Promise.reject({ code: 400, message: 'The username or password is incorrect. Please try again.' });\n  }\n  /*\n    fake data api - save data to local storage\n    add some new api : update, delete all\n   */\n  async createTodo(content: string): Promise<Todo> {\n    try {\n      const newTodo = {\n        content: content,\n        created_date: new Date().toISOString(),\n        status: TodoStatus.ACTIVE,\n        id: shortid(),\n        user_id: \"firstUser\",\n        color: generateColor()\n      };\n      return Promise.resolve(newTodo as Todo);\n    } catch (error) {\n      return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n\n  async getTodoList(): Promise<Todo[]> {\n    try {\n       let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async updateTodo(field: any, value: any, id: string): Promise<Todo> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      todoList[index][field] = value;\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList[index] as Todo);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n  async deleteTodo(id: string): Promise<Todo[]> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      const index = todoList.findIndex((todo: any) => todo.id === id);\n      if (index > -1) {\n        todoList.splice(index, 1);\n      }\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(todoList);\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n \n  async deleteAllTodo(): Promise<String> {\n     try {\n       // NOTE: fake data api - save to local storage\n      let todoList: any = [];\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Delete Success\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n    \n  }\n  async updateAllTodo(status: Boolean): Promise<String> {\n    try {\n      // NOTE: fake data api - save to local storage\n      let todoList: any = localStorage.getItem(\"todoList\") || \"[]\";\n      todoList = JSON.parse(todoList);\n      todoList = todoList.map((v: Todo) => {\n          v.status = status ? TodoStatus.COMPLETED : TodoStatus.ACTIVE;\n          return v;\n      })\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      return Promise.resolve(\"Updated\");\n    } catch (error) {\n       return Promise.reject({\n        code: 500,\n        message: \"Some thing went wrong !\"\n      });\n    }\n  }\n}\n\nexport default new ApiFrontend();\n","export default __webpack_public_path__ + \"static/media/logo.05536d55.svg\";","import styled from \"styled-components\";\n\nexport const Alert = styled.div`\n  background: ${(props) => props.theme.palette.error.main};\n  color: ${(props) => props.theme.palette.error.dark};\n  padding: 6px 16px;\n  display: flex;\n  font-weight: 400;\n  border-radius: 4px;\n  align-items: center;\n`;","import axios from 'axios';\n\nconst ins = axios.create({\n    baseURL: 'http://localhost:5050',\n    timeout: 10000\n})\n\nins.interceptors.request.use((request)=>{\n    request.headers.Authorization = localStorage.getItem('token')\n\n    return request\n})\n\nexport default ins","import { IAPI } from './types';\nimport { Todo } from '../models/todo';\nimport axios from '../utils/axios';\nimport { AxiosResponse } from 'axios';\n\nclass ApiFullstack extends IAPI {\n    async signIn(username: string, password: string): Promise<Object> {\n        const resp = await axios.get<AxiosResponse<string>>(`/login?user_id=${username}&password=${password}`);\n\n        return resp.data.data\n    }\n\n    async createTodo(content: string): Promise<Todo> {\n        const resp = await axios.post<AxiosResponse<Todo>>(`/tasks`, {\n            content\n        });\n\n        return resp.data.data;\n    }\n\n    async getTodoList(): Promise<Array<Todo>> {\n        const resp = await axios.get<AxiosResponse<Array<Todo>>>(`/tasks`);\n\n        return resp.data.data;\n    }\n\n    // NOTE: Only fake handle functions to cross error warning\n\n    async updateTodo(field: any,value : any, id: string): Promise<Todo> {\n        const resp = await axios.put<AxiosResponse<Todo>>(`/tasks`, {\n            id\n        });\n        return resp.data.data;\n    }\n    async deleteTodo(id: string): Promise<Todo[]> {\n        return Promise.resolve([])\n    }\n    async deleteAllTodo(): Promise<String>{\n        return Promise.resolve('')\n    }\n    async updateAllTodo(status: boolean): Promise<String>{\n        return Promise.resolve('')\n    }\n}\n\n\nexport default new ApiFullstack();"],"sourceRoot":""}